#!/bin/bash

set -eu

here=$1
root_mount=$2
root_type=$3
grub_device=$4
digitalocean=$5

## Bring in some helper functions
. "$here/util.bash"

## Enable networking
log "Setting up chroot networking"
cd host
mkdir -p etc dev proc sys
cp /etc/resolv.conf etc/external-resolv.conf
for fn in dev proc sys; do mount_with_cleanup --bind "/$fn" "$fn"; done

## Patch the ISO for local chroot
log_start "Looking for NixOS init... "
INIT=$(find . -type f -path '*nixos*/init')
log_end "$INIT"
log_start "Looking for NixOS bash... "
BASH=$(find . -type f -path '*/bin/bash' | tail -n 1)
log_end "$BASH"

## Don't run systemd on chroot start, run our stage2 script
log "Patching init"
sed -i "s,exec systemd,exec /$BASH -i /nixos-in-place/stage2 $root_mount $root_type $grub_device $digitalocean," "$INIT"
sed -i "s,starting systemd,starting /nixos-in-place/stage2," "$INIT"

## Don't try to remount / since we didn't do a proper phase 1
sed -i "s|mount -n -o remount,rw none /|echo 'not remounting /'|" "$INIT"

## The chroot will install outside of itself, into the main system
log "Binding remaining environment"
on_exit rmdir nixos
mkdir -p /nixos nixos
mount_with_cleanup --bind /nixos nixos

## Allow stage2 to access these scripts
on_exit rmdir nixos-in-place
mkdir -p nixos-in-place
mount_with_cleanup --bind "$here" nixos-in-place

## Imbue the modified live CD environment so we can install
log "Embarking stage2!"
chroot . "/$INIT"
